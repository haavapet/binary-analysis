name: backend ci

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    defaults:
      run:
        working-directory: "./backend"

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache the virtualenv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: Lint with ruff
        run: |
          python -m poetry run ruff --format=github --target-version=py37 .

      - name: Static type check with MyPy
        run: |
          poetry run mypy app/*.py app/models/*.py

      - name: Test with pytest
        run: |
          poetry run pytest -x
